trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - template: ./terraform-variables.yml
  - group: azure-service-principal
  - group: azure-ad-users
  
stages:
  - stage: Validate
    jobs:
      - job: TerraformValidate
        steps:
        - template: templates/infra-validate.yml
          parameters:
            working_dir: terraform
        condition: succeeded()

  - stage: Scan
    dependsOn: [Validate]
    jobs:
      - job: TerraformSecurityScan
        steps:
        - template: templates/infra-test.yml
        condition: succeeded()

  - stage: Plan
    dependsOn: [Scan]
    condition: |
      in(dependencies.Validate.result, 'Succeeded')
    jobs:
      - job: TerraformPlan
        steps:
        - template: templates/infra-plan.yml
          parameters:
            working_dir: terraform
            environment: $(environment)
            environment_short: $(environment_abbr)
            base_name: $(base_name)
            sql_ad_admin: $(sql_ad_admin)
        condition: succeeded()
      
  - stage: Deploy
    dependsOn: [Plan]
    condition: |
      and(
        in(dependencies.Plan.result, 'Succeeded'),
        eq(dependencies.Plan.outputs['TerraformPlanShared.TerraformPlan.apply'], '1')
      )
    jobs:
      - deployment: TerraformDeploy
        environment: ${{ variables.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/infra-deploy.yml
                parameters:
                  working_dir: terraform
                  environment: $(environment)

